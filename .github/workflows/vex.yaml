#main.yml

name: Vulnerability Scan workflow

on:
  pull_request:
    branches: ["main"]

jobs:
  vex_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      
      - name: Generate CycloneDX SBOM
        uses: CycloneDX/gh-gomod-generate-sbom@v2
        with:
          version: v1
          args: mod -licenses -json -output bom.json

      # - name: Meterian Scanner
      #   uses: MeterianHQ/meterian-github-action@v1.0.17
      #   env:
      #     METERIAN_API_TOKEN: ${{ secrets.METERIAN_API_TOKEN }}
      #     GITHUB_TOKEN: ${{ github.token }}
      #     ALWAYS_OPEN_PRS: true
        # with:
        #   autofix_security: conservative          
        #   autofix_stability: safe
        #   autofix_with_pr: true
        #   autofix_with_issue: true
  kubescape:
      runs-on: ubuntu-latest
      permissions:
        actions: read
        contents: read
        security-events: write
      steps:
      - uses: actions/checkout@v3
      - uses: kubescape/github-action@main
        continue-on-error: true
        with:
          format: sarif
          outputFile: results
          # # Optional: Specify the Kubescape Portal credentials 
          # account: ${{secrets.KUBESCAPE_ACCOUNT}}
          # accessKey: ${{secrets.KUBESCAPE_ACCESS_KEY}}
          # server: ${{ vars.KUBESCAPE_SERVER }}
          # # Optional: Scan a specific path. Default will scan the whole repository
          # files: "examples/*.yaml"
          
      - name: Check if results exist
        id: check_results
        run: |
          if [ -s results.sarif ]; then
            echo "results_found=true" >> $GITHUB_ENV
          else
            echo "No results found, skipping issue creation."
            echo "results_found=false" >> $GITHUB_ENV
          fi

      - name: Create GitHub Issue with Kubescape Results
        if: env.results_found == 'true'
        run: |
          body=$(jq -r '.runs[0].results[]?.message.text' results.sarif | head -n 20 | sed 's/^/- /')
          title="Kubescape Scan Report - $(date +'%Y-%m-%d')"
          gh issue create \
            --title "$title" \
            --body "**Top scan findings:**\n\n$body" \
            --label "security,kubescape"
        env:
          GH_TOKEN: ${{ github.token }}